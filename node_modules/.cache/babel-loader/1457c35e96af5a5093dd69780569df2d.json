{"ast":null,"code":"var _jsxFileName = \"/home/arpan/Desktop/AdvanceTodo/src/Components/ShowList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"react-bootstrap/Button\";\nimport { Card } from \"react-bootstrap\";\nimport AddTodo from \"./AddTodo\";\nimport EditTodo from \"./EditTodo\";\nimport { setAddTodoModalStatus, setTodoData, setEditTodoModalStatus, handleMultipleDeleteData, handleMultipleCompleteData, handleMultipleCopyData, addTodoDataFromUncomplete, deleteFromCompleteData, manageCUHistory } from \"../Redux/Actions/allActions\";\nimport \"./Style.css\";\nimport cuid from \"cuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ShowList() {\n  _s();\n\n  const [isSelect, setIsSelect] = useState();\n  const addModalStatus = useSelector(state => state.reducer.setAddModal);\n  const editModalStatus = useSelector(state => state.reducer.setEditModal);\n  const data = useSelector(state => state.reducer.todoData);\n  const cData = useSelector(state => state.reducer.completeData);\n  const history = useSelector(state => state.reducer.manageHistory);\n  const create = localStorage.getItem(\"createdData\");\n  const update = localStorage.getItem(\"updatedData\");\n  const complete = localStorage.getItem(\"completedData\");\n  const comHistory = localStorage.getItem(\"cuHistory\");\n  const createDateTime = JSON.parse(create);\n  const updateDateTime = JSON.parse(update);\n  const completeData = JSON.parse(complete);\n  history.sort((a, b) => Date.parse(b.dateTimeHistory) - Date.parse(a.dateTimeHistory));\n  const dispatch = useDispatch();\n\n  const addTodoModal = () => {\n    dispatch(setAddTodoModalStatus({\n      status: true\n    }));\n  };\n\n  const editTodoModal = todo => {\n    dispatch(setTodoData(todo));\n    dispatch(setEditTodoModalStatus({\n      status: true\n    }));\n  };\n\n  useEffect(() => {\n    setIsSelect(data.map(todo => {\n      return {\n        title: todo.title,\n        desc: todo.desc,\n        time: todo.time,\n        date: todo.date,\n        id: todo.id\n      };\n    }));\n  }, [data]);\n\n  const handleMultipleDelete = () => {\n    let arrId = [];\n    isSelect.map(del => {\n      if (del.set) {\n        arrId.push(del.id);\n      }\n\n      return del;\n    });\n    dispatch(handleMultipleDeleteData(arrId));\n  };\n\n  const handleMultipleComplete = () => {\n    let arrId = [];\n    isSelect.map(del => {\n      if (del.set) {\n        arrId.push(del.id);\n      }\n\n      return del;\n    });\n    const compData = data.filter(todo => arrId.includes(todo.id));\n\n    if (compData.length > 0) {\n      dispatch(handleMultipleCompleteData({\n        compData\n      }));\n      dispatch(handleMultipleDeleteData(arrId));\n      let coDateTimeHistory = new Date().toISOString();\n      arrId.map(data => dispatch(manageCUHistory({\n        id: data,\n        dateTimeHistory: coDateTimeHistory\n      })));\n    }\n  };\n\n  const handleMultipleCopy = () => {\n    let arrId = [];\n    isSelect.map(del => {\n      if (del.set) {\n        arrId.push(del);\n      }\n\n      return del;\n    });\n    arrId.map(data => {\n      data.id = cuid();\n      data.title = \"Copy of \" + data.title;\n      data.dateTime = new Date().toISOString();\n    });\n    dispatch(handleMultipleCopyData(arrId));\n  };\n\n  const handleUncompleteData = cdata => {\n    cdata.unDateTime = new Date().toISOString();\n    dispatch(addTodoDataFromUncomplete(cdata));\n    dispatch(deleteFromCompleteData(cdata));\n    let unDateTimeHistory = new Date().toISOString();\n    dispatch(manageCUHistory({\n      id: cdata.id,\n      dateTimeHistory: unDateTimeHistory\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"left\"\n    },\n    children: [addModalStatus.status ? /*#__PURE__*/_jsxDEV(AddTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 32\n    }, this) : \"\", editModalStatus.status ? /*#__PURE__*/_jsxDEV(EditTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => addTodoModal(),\n        children: \"Add New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        float: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), data && data.map(todo => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: 'auto',\n          height: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            onClick: () => editTodoModal(todo),\n            children: [\"Title:-\", todo.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Desc:-\", todo.desc]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"m-3\",\n            onChange: e => {\n              let checked = e.target.checked;\n              setIsSelect(isSelect.map(d => {\n                if (todo.id === d.id) {\n                  d.set = checked;\n                }\n\n                return d;\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-history fa-2x\",\n            style: {\n              textAlign: \"center\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon-detail-todo\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"createdAt:\", todo.dateTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 18\n            }, this), updateDateTime && updateDateTime.map(data => data.id === todo.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"updatedAt:\", data.uDateTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 22\n              }, this)\n            }, void 0, false) : \"\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 20\n      }, this), data.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn btn-primary m-3\",\n          value: \"Delete\",\n          onClick: () => handleMultipleDelete()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn btn-primary m-3\",\n          value: \"Complete\",\n          onClick: () => handleMultipleComplete()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"btn btn-primary m-3\",\n          value: \"Copy\",\n          onClick: () => handleMultipleCopy()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        float: 'right'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Completed Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), cData && cData.map(cdata => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          height: \"auto\",\n          width: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Title:\", cdata.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Desc:\", cdata.desc]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            className: \"btn btn-primary m-2\",\n            value: \"Uncomplete\",\n            onClick: () => handleUncompleteData(cdata)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-history fa-2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon-detail-todo\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"createdAt:\", cdata.dateTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 24\n              }, this), updateDateTime && updateDateTime.map(data => data.id === cdata.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"updatedAt:\", data.uDateTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 26\n                }, this)\n              }, void 0, false) : \"\"), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 31\n              }, this), history && history.map(d => d.id === cdata.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: d.dateTimeHistory\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false) : \"\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowList, \"1HL8WHqyOsGVtTivVZEZHfr63LY=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ShowList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowList\");","map":{"version":3,"sources":["/home/arpan/Desktop/AdvanceTodo/src/Components/ShowList.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Button","Card","AddTodo","EditTodo","setAddTodoModalStatus","setTodoData","setEditTodoModalStatus","handleMultipleDeleteData","handleMultipleCompleteData","handleMultipleCopyData","addTodoDataFromUncomplete","deleteFromCompleteData","manageCUHistory","cuid","ShowList","isSelect","setIsSelect","addModalStatus","state","reducer","setAddModal","editModalStatus","setEditModal","data","todoData","cData","completeData","history","manageHistory","create","localStorage","getItem","update","complete","comHistory","createDateTime","JSON","parse","updateDateTime","sort","a","b","Date","dateTimeHistory","dispatch","addTodoModal","status","editTodoModal","todo","map","title","desc","time","date","id","handleMultipleDelete","arrId","del","set","push","handleMultipleComplete","compData","filter","includes","length","coDateTimeHistory","toISOString","handleMultipleCopy","dateTime","handleUncompleteData","cdata","unDateTime","unDateTimeHistory","textAlign","float","width","height","e","checked","target","d","uDateTime"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"react-bootstrap/Button\";\nimport {Card} from \"react-bootstrap\";\nimport AddTodo from \"./AddTodo\";\nimport EditTodo from \"./EditTodo\";\nimport {setAddTodoModalStatus,setTodoData,setEditTodoModalStatus,\n  handleMultipleDeleteData,handleMultipleCompleteData,handleMultipleCopyData,\n  addTodoDataFromUncomplete,deleteFromCompleteData,manageCUHistory} from \"../Redux/Actions/allActions\";\nimport \"./Style.css\"\nimport cuid from \"cuid\";\nexport default function ShowList() {\n  const [isSelect,setIsSelect]=useState()\n  const addModalStatus=useSelector(state=>state.reducer.setAddModal);\n  const editModalStatus=useSelector(state=>state.reducer.setEditModal);\n  const data=useSelector(state=>state.reducer.todoData)\n  const cData=useSelector(state=>state.reducer.completeData)\n  const history=useSelector(state=>state.reducer.manageHistory)\n  const create=localStorage.getItem(\"createdData\")\n  const update=localStorage.getItem(\"updatedData\")\n  const complete=localStorage.getItem(\"completedData\")\n  const comHistory=localStorage.getItem(\"cuHistory\")\n  const createDateTime = JSON.parse(create)\n  const updateDateTime = JSON.parse(update)\n  const completeData = JSON.parse(complete)\n  history.sort((a,b)=>\n    Date.parse(b.dateTimeHistory)-Date.parse(a.dateTimeHistory))\n  const dispatch=useDispatch();\n  const addTodoModal=()=>{\n    dispatch(setAddTodoModalStatus({status:true}));\n  };\n  const editTodoModal=(todo)=>{\n    dispatch(setTodoData(todo));\n    dispatch(setEditTodoModalStatus({status:true}));\n  };\n  useEffect(() => {\n    setIsSelect(data.map(todo=>{\n      return{\n        title:todo.title,\n        desc:todo.desc,\n        time:todo.time,\n        date:todo.date,\n        id:todo.id,\n      }\n    })\n    )\n  }, [data])\nconst handleMultipleDelete = () => {\n     let arrId = []\n     isSelect.map((del) => {\n        if(del.set) {\n            arrId.push(del.id)\n        }\n       return del\n      })\n      dispatch(handleMultipleDeleteData(arrId))\n  }\nconst handleMultipleComplete=()=>{\n  let arrId = []\n     isSelect.map((del) => {\n        if(del.set) {\n            arrId.push(del.id)\n        }\n       return del\n      })\n      const compData=data.filter(todo=> arrId.includes(todo.id))\n      if(compData.length>0){\n      dispatch(handleMultipleCompleteData({compData}))\n      dispatch(handleMultipleDeleteData(arrId))\n      let coDateTimeHistory=new Date().toISOString()\n      arrId.map(data=>\n      dispatch(manageCUHistory({id:data,dateTimeHistory:coDateTimeHistory}))\n      )\n    }\n  }\nconst handleMultipleCopy=()=>{\n  let arrId = []\n     isSelect.map((del) => {\n        if(del.set) {\n            arrId.push(del)\n        }\n       return del\n      })\n      arrId.map(data=> {data.id=cuid()\n      data.title= \"Copy of \"+ data.title\n      data.dateTime=new Date().toISOString() } )\n      dispatch(handleMultipleCopyData(arrId))\n    }\nconst handleUncompleteData=(cdata)=>{\n  cdata.unDateTime=new Date().toISOString()\n  dispatch(addTodoDataFromUncomplete(cdata))\n  dispatch(deleteFromCompleteData(cdata))\n  let unDateTimeHistory=new Date().toISOString()\n  dispatch(manageCUHistory({id:cdata.id,dateTimeHistory:unDateTimeHistory}))\n}\nreturn (\n    <div style={{ textAlign:\"left\"}}>\n        {addModalStatus.status?<AddTodo/>:\"\"}\n        {editModalStatus.status?<EditTodo/>:\"\"}\n      <h1 style={{ textAlign:\"center\"}}>\n        <Button variant=\"primary\" onClick={() => addTodoModal()}>\n          Add New Todo\n        </Button>\n      </h1>\n      <div style={{float: 'left'}}>\n        <h2>Todo</h2>\n        {data && data.map((todo)=>\n          <Card style={{ width: 'auto' , height: \"auto\" }}>\n            <Card.Body>\n              <Card.Title onClick={()=>editTodoModal(todo)}>Title:-{todo.title}</Card.Title>\n                <Card.Text>Desc:-{todo.desc}</Card.Text>\n                <input type=\"checkbox\" className=\"m-3\"\n                 onChange={e=>{\n                  let checked=e.target.checked;\n                  setIsSelect(\n                    isSelect.map(d=>{\n                      if(todo.id===d.id){\n                        d.set=checked;\n                      }\n                      return d\n                }))}}/>\n                </Card.Body>\n                <div className=\"icon\">\n                <i className=\"fa fa-history fa-2x\" style={{textAlign:\"center\"}}/>\n                <div className=\"icon-detail-todo\">\n                {<p>createdAt:{todo.dateTime}</p>}\n                {updateDateTime && updateDateTime.map(data=> (data.id===todo.id)?\n                  < ><p>updatedAt:{data.uDateTime}</p>\n              </>:\"\")}\n              </div>\n              </div>\n          </Card>)}<br/>\n            { data.length>0 ? <> <input type=\"button\" className=\"btn btn-primary m-3\" value=\"Delete\"\n              onClick={()=>handleMultipleDelete()} />\n            <input type=\"button\" className=\"btn btn-primary m-3\" value=\"Complete\"\n              onClick={()=>handleMultipleComplete()} />\n            <input type=\"button\" className=\"btn btn-primary m-3\" value=\"Copy\"\n              onClick={()=>handleMultipleCopy()} /> </>:\"\"}\n          </div><hr/>\n          <div style={{float: 'right'}}>\n            <h2>Completed Todo</h2>\n            {cData && cData.map(cdata=>\n              <Card style={{ height:\"auto\" , width:\"auto\"}}>\n                <Card.Body>\n                    <Card.Text>Title:{cdata.title}</Card.Text>\n                    <Card.Text>Desc:{cdata.desc}</Card.Text>\n                    <input type=\"button\" className=\"btn btn-primary m-2\" value=\"Uncomplete\" onClick={()=>handleUncompleteData(cdata)}/>\n                    <br/>\n                    <div className=\"icon\">\n                      <i className=\"fa fa-history fa-2x\"/>\n                      <div className=\"icon-detail-todo\">\n                      {<p>createdAt:{cdata.dateTime}</p>}\n                      {updateDateTime && updateDateTime.map(data=> \n                      (data.id===cdata.id)?\n                      < ><p>updatedAt:{data.uDateTime}</p>\n                      </>:\"\")}<hr/>\n                      {history && history.map((d) =>\n                        (d.id===cdata.id) ?\n                        <><p>{d.dateTimeHistory}</p>\n                        </>:\"\"\n                       )}\n                    </div>\n                    </div>\n                    </Card.Body>\n              </Card>)}\n\n          </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}